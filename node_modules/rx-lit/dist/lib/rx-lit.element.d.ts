import { LitElement } from 'lit-element';
import { Observable, Subject, Subscription } from 'rxjs';
declare const unsubscribe: unique symbol;
declare const subscriptions: unique symbol;
declare class ExistingSubscription {
    stream$?: Observable<unknown>;
    subscription?: Subscription;
}
export declare abstract class RxLitElement extends LitElement {
    [unsubscribe]: Subject<unknown>;
    [subscriptions]: Map<keyof this, ExistingSubscription>;
    /**
     * Subscribes to an observable, sets new values to the property of the class and schedules an update.
     * @param propKey Property of the class to receive values.
     * @param stream$ Observable that will be subscribed to.
     */
    subscribe<Key extends keyof this>(propKey: Key, stream$: Observable<this[Key]>): void;
    disconnectedCallback(): void;
}
export {};
