// TODO: Improve typing
/**
 * Subscribes to an observable, sets new values to the property of the class and schedules an update.
 * @param stream$ Observable that will be subscribed to.
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const subscribe = (stream) => (targetPrototype, propertyKey) => {
    if (!stream)
        throw new Error('Invalid stream!');
    const initial = targetPrototype.connectedCallback;
    targetPrototype.connectedCallback = function () {
        initial === null || initial === void 0 ? void 0 : initial.call(this);
        this.subscribe(propertyKey, stream);
    };
};
//# sourceMappingURL=subscribe.decorator.js.map